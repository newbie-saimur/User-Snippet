<snippet>
	<content><![CDATA[
class SGTree {
    vector<int> seg;
public:
    SGTree(int n) {
        seg.resize(4 * n + 1);
    }

    void build(int index, int low, int high, int a[]) {
        if (low == high) {
            seg[index] = a[low];
            return;
        }
        int mid = (low + high) / 2;
        build(2 * index, low, mid, a);
        build(2 * index + 1, mid + 1, high, a);
        seg[index] = min(seg[2 * index], seg[2 * index + 1]);
    }

    int query(int index, int low, int high, int l, int r, int a[]) {
        if (low >= l && high <= r) return seg[index];
        if (low > r || high < l) return INT_MAX;
        int mid = (low + high) / 2;
        int left = query(2 * index, low, mid, l, r, a);
        int right = query(2 * index + 1, mid + 1, high, l, r, a);
        return min(left, right);
    }

    void update(int index, int low, int high, int i, int x, int a[]) {
        if (low == high) {
            seg[index] = x;
            return;
        }
        int mid = (low + high) / 2;
        if (i <= mid) update(2 * index, low, mid, i, x, a);
        else update(2 * index + 1, mid + 1, high, i, x, a);
        seg[index] = min(seg[2 * index], seg[2 * index + 1]);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segtree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
