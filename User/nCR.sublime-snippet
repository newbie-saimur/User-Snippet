<snippet>
	<content><![CDATA[
const int M = 1e9 + 7;
const int MAXN = 1e6 + 5;
int fact[MAXN], invFact[MAXN];

int binExp(int a, int b) {
    int res = 1;
    while (b) {
        if (b & 1) res = (res * a) % M;
        a = (a * a) % M;
        b >>= 1;
    }
    return res;
}

int inverse(int x) {
    return binExp(x, M - 2);
}

void compute_factorial() {
    fact[0] = invFact[0] = 1;
    for (int i = 1; i < MAXN; i++) {
        fact[i] = (fact[i - 1] * i) % M;
        invFact[i] = inverse(fact[i]);
    }
}

int nCr(int N, int R) {
    if (N < 0 || R < 0 || R > N) {
        return 0;
    }
    int num = fact[N];
    int denom = (invFact[R] * invFact[N - R]) % M;
    return (num * denom) % M;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>nCr</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
