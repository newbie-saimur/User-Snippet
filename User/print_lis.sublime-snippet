<snippet>
	<content><![CDATA[
    int n; cin >> n;
    vector<int> a(n), parent(n, -1), ind(n);
    vector<int> lis;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        int it = lower_bound(lis.begin(), lis.end(), a[i]) - lis.begin();
        if (it == lis.size()) {
            lis.push_back(a[i]);
            ind[lis.size() - 1] = i;
            parent[i] = (lis.size() == 1 ? -1 : ind[it - 1]);
        }
        else {
            lis[it] = a[i];
            ind[it] = i;
            parent[i] = (it == 0 ? -1 : ind[it - 1]);
        }
    }

    deque<int> LIS;
    LIS.push_front(lis.back());
    auto it = ind[lis.size() - 1];
    while (parent[it] != -1) {
        it = parent[it];
        LIS.push_front(a[it]);
    }
    for (auto x : LIS) cout << x << ' ';
    cout << '\n';
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>print_lis</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
